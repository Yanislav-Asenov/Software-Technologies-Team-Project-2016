@using System.Globalization
@model SoftwareTechnologiesTeamProject.ViewModels.TeamDetailsViewModel
@{
    ViewBag.Title = "Details";
}

@if (User.IsInRole("Administrator"))
{
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.Team.Id })
    </p>
}

<div class="container">
<div class="leagueNameWrapper">
    <div class="row">
        <div class="col-md-3">
            <img src="@Model.Team.LogoLink" alt="clubLogo" width="130" class="teamDetailsLogo"/>
        </div>
        <div class="col-md-6 teamDetailsTeamNameHeading">
            <h1>@Model.Team.Name</h1>
            <h4>@Model.League.Name - @Model.League.Country</h4>
        </div>
        <div class="col-md-3">
            <table class="table-condensed teamInfoTable">
                <thead class="tableHead">
                <tr>
                    <th class="text-center" colspan="2">Team info</th>
                </tr>
                </thead>

                <tbody class="tableBody">
                <tr>
                    <td class="text-right">@Html.LabelFor(model => model.Team.City):</td>
                    <td class="text-left">@Model.Team.City</td>
                </tr>
                <tr>
                    <td class="text-right">@Html.LabelFor(model => model.Team.Coach):</td>
                    <td class="text-left">@Model.Team.Coach</td>
                </tr>
                <tr>
                    <td class="text-right">@Html.LabelFor(model => model.Team.Stadium):</td>
                    <td class="text-left">@Model.Team.Stadium</td>
                </tr>
                <tr>
                    <td class="text-right">@Html.LabelFor(model => model.Team.StadiumCapacity):</td>
                    <td class="text-left">@Model.Team.StadiumCapacity.ToString("#,#", CultureInfo.InvariantCulture)</td>
                </tr>
                <tr>
                    <td class="boldInfo text-right">Stadium size:</td>
                    <td class="text-left">@Model.Team.GetStadiumSize()</td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="playedGamesWrapper">
    <div class="row">
        <div class="col-md-12">
            <h3>Games played in the league so far</h3>
            <table class="table matchHistoryTable">
                <tr class="tableHead">
                    <th class="matchHistoryDate">Date</th>
                    <th class="matchHistoryHomeTeam">Home team</th>
                    <th class="historyMatchResult">Result</th>
                    <th class="matchHistoryAwayTeam">Away team</th>
                    <th class="matchHistoryCoefficient">1</th>
                    <th class="matchHistoryCoefficient">X</th>
                    <th class="matchHistoryCoefficient">2</th>
                </tr>

                @foreach (var match in Model.GetPlayedMatches())
                {
                    <tr class="tableBody">
                        <td class="matchHistoryDate">@match.GetShortDate()</td>
                        @if (match.HomeTeam.Name == Model.Team.Name)
                        {
                            <td class="matchHistoryHomeTeam boldTeamName">@match.HomeTeam.Name</td>
                        }
                        else
                        {
                            <td class="matchHistoryHomeTeam">@match.HomeTeam.Name</td>
                        }

                        @if (match.GetWinnerName() == "draw")
                        {
                            <td class="historyMatchResult draw">
                                @match.HomeTeamGoals - @match.AwayTeamGoals
                            </td>
                        }
                        else if (match.GetWinnerName() == Model.Team.Name)
                        {
                            <td class="historyMatchResult victory">
                                @match.HomeTeamGoals - @match.AwayTeamGoals
                            </td>
                        }
                        else
                        {
                            <td class="historyMatchResult loss">
                                @match.HomeTeamGoals - @match.AwayTeamGoals
                            </td>
                        }

                        @if (match.AwayTeam.Name == Model.Team.Name)
                        {
                            <td class="matchHistoryAwayTeam boldTeamName">@match.AwayTeam.Name</td>
                        }
                        else
                        {
                            <td class="matchHistoryAwayTeam">@match.AwayTeam.Name</td>
                        }
                        <td class="matchHistoryCoefficient">@match.HomeCoefficient</td>
                        <td class="matchHistoryCoefficient">@match.DrawCoefficient</td>
                        <td class="matchHistoryCoefficient">@match.AwayCoefficient</td>
                    </tr>
                }
            </table>

            @* Paragraph info total wins,draws and losses in all games played through the season *@
            <p>
                Total of <strong>@Model.Team.Victories</strong> wins
                @if (Model.Team.Draws > 0 && Model.Team.Losses > 0)
                {
                    @:,<strong>@Model.Team.Draws</strong> draws and <strong>@Model.Team.Losses</strong> losses
                }
                else if (Model.Team.Draws > 0 && Model.Team.Losses == 0)
                {
                    @:,<strong>@Model.Team.Draws</strong> draws
                }
                else if (Model.Team.Losses > 0 && Model.Team.Draws == 0)
                {
                    @:,<strong>@Model.Team.Losses</strong> losses
                }

                in last <strong>@Model.Team.TotalGamesPlayed</strong> games played through season @Model.Team.League.GetSeason()
            </p>
        </div>
    </div>
</div>
<div class="teamStatsWrapper">
    <div class="seasonStats">
        <div class="row">
            @* Wins/Draws/Losses stats *@
            <div class="col-md-3">
                <table class="table table-condensed teamStatsTable">
                    <thead class="tableHead">
                    <tr>
                        <td class="text-left boldInfo">Games played</td>
                        <td class="text-right">@Model.GetPlayedMatches().Count</td>
                    </tr>
                    </thead>
                    <tbody class="tableBody">
                    <tr>
                        <td class="text-left boldInfo">Wins</td>
                        <td class="text-right">@Model.GetWinsInPercents()</td>
                    </tr>
                    <tr>
                        <td class="text-left boldInfo">Draws</td>
                        <td class="text-right">@Model.GetDrawsInPercents()</td>
                    </tr>
                    <tr>
                        <td class="text-left boldInfo">Losses</td>
                        <td class="text-right">@Model.GetLossesInPercents()</td>
                    </tr>
                    </tbody>
                </table>
            </div>

            @* Goals stats *@
            <div class="col-md-3">
                <table class="table table-condensed teamStatsTable">
                    <thead class="tableHead">
                    <tr>
                        <td class="text-left boldInfo">Goals</td>
                        <td class="text-right">@Model.Team.GamesPlayed</td>
                    </tr>
                    </thead>

                    <tbody class="tableBody">
                    <tr>
                        <td class="text-left boldInfo">Average per game</td>
                        <td class="text-right">@Model.Team.GetAverageGoalsPerGame()</td>
                    </tr>
                    <tr>
                        <td class="text-left boldInfo">Average goals for</td>
                        <td class="text-right">@Model.Team.GetAverageGoalsFor()</td>
                    </tr>
                    <tr>
                        <td class="text-left boldInfo">Average goals against</td>
                        <td class="text-right">@Model.Team.GetAverageGoalsAgainst()</td>
                    </tr>
                    </tbody>
                </table>
            </div>

            @* Goals stats *@
            <div class="col-md-3">
                <table class="table table-condensed teamStatsTable leftSide">
                    <thead class="tableHead">
                    <tr>
                        <th class="text-center">Goals</th>
                        <th class="text-center">Under</th>
                        <th class="text-center">Over</th>
                    </tr>
                    </thead>

                    <tbody class="tableBody">
                    <tr>
                        <td class="text-center boldInfo">1.5</td>
                        <td class="text-center">@Model.GetMatchesGoalsInfo("under", "1.5")</td>
                        <td class="text-center">@Model.GetMatchesGoalsInfo("over", "1.5")</td>
                    </tr>
                    <tr>
                        <td class="text-center boldInfo">2.5</td>
                        <td class="text-center">@Model.GetMatchesGoalsInfo("under", "2.5")</td>
                        <td class="text-center">@Model.GetMatchesGoalsInfo("over", "2.5")</td>
                    </tr>
                    <tr>
                        <td class="text-center boldInfo">3.5</td>
                        <td class="text-center">@Model.GetMatchesGoalsInfo("under", "3.5")</td>
                        <td class="text-center">@Model.GetMatchesGoalsInfo("over", "3.5")</td>
                    </tr>
                    </tbody>
                </table>
            </div>

            @* The most common results *@
            <div class="col-md-3">
                <table class="table table-condensed teamStatsTable resultsInfo leftSide">
                    <thead class="tableHead">
                    <tr>
                        <th colspan="3">The most common results</th>
                    </tr>
                    <tr>
                        <td class="boldInfo">Result</td>
                        <td title="Number of matches with this result" class="boldInfo">Matches</td>
                        <td class="boldInfo">Percents</td>
                    </tr>
                    </thead>

                    <tbody class="tableBody">
                    @foreach (var stat in Model.GetTeamStats())
                    {
                        <tr>
                            <td class="text-center">
                                @stat.Result
                            </td>
                            <td class="text-center">
                                @stat.MatchesPlayed
                            </td>
                            <td class="text-center">
                                @stat.GetPercents(@Model.GetPlayedMatches().Count)
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@*
        Mini Standings
    *@
<div class="teamDetailsStandingsFixturesContainer">
    <div class="row">
        <div class="col-md-6 rightCol">
            <table class="table table-condensed">
                <thead class="tableHead">
                <tr>
                    <th colspan="5">@Model.League.Name</th>
                </tr>
                <tr>
                    <th class="standingsInfo">Position</th>
                    <th class="standingsTeamName">Team</th>
                    <th class="standingsInfo" title="Played">Pl</th>
                    <th class="standingsInfo" title="Goal Difference">GD</th>
                    <th class="standingsInfo" title="Points">Pts</th>
                </tr>
                </thead>

                <tbody class="tableBody">
                @foreach (var keyValuePair in Model.GetMiniStandings())
                {
                    int position = keyValuePair.Key;
                    var currentTeam = keyValuePair.Value;

                    if (keyValuePair.Value.Name == Model.Team.Name)
                    {
                        <tr class="highlightedTeam">
                            <td class="standingsInfo">@position</td>
                            <td class="highlightedTeam standingsTeamName">
                                <a href="/Teams/Details/@currentTeam.Id" class="teamLink">
                                    <img src="@currentTeam.LogoLink" alt="Club Logo" class="team-logo-small" />
                                    @currentTeam.Name
                                </a>
                            </td>
                            <td class="standingsInfo">@currentTeam.GamesPlayed</td>
                            <td class="standingsInfo">@currentTeam.GetGoalDifference()</td>
                            <td class="standingsInfo">@currentTeam.Points</td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td class="standingsInfo">@position</td>
                            <td class="standingsTeamName">
                                <a href="/Teams/Details/@currentTeam.Id" class="teamLink">
                                    <img src="@currentTeam.LogoLink" class="team-logo-small" alt="Club Logo" />
                                     @currentTeam.Name
                                </a>
                            </td>
                            <td class="standingsInfo">@currentTeam.GamesPlayed</td>
                            <td class="standingsInfo">@currentTeam.GetGoalDifference()</td>
                            <td class="standingsInfo">@currentTeam.Points</td>
                        </tr>
                    }
                }
                </tbody>
            </table>
            <div class="tablesLinkContainer">
                <a href="/Leagues/Standings/@Model.Team.LeagueId" class="tablesLink">View Full Table</a>
            </div>
        </div>

        @*
        Team upcoming matches
         *@
        <div class="col-md-6 leftCol">
            <table class="table table-condensed">
                <thead class="tableHead">
                <tr>
                    <th colspan="4">Fixtures</th>
                </tr>
                </thead>

                <tbody class="tableBody">
                @foreach (var kvp in Model.GetUpcomingMatches())
                {
                    var date = kvp.Key;
                    var match = kvp.Value;
                    <tr class="singleUpcomingMatch" onmouseover="changeLinkColor(@match.Id)" id="linkRow-@match.Id" onmouseout="resetLinkColor(@match.Id)">
                        <td>
                            <a href="/Matches/Details/@match.Id" class="matchLink fixtureLink-@match.Id">
                                @match.GetShortDate()
                            </a>
                        </td>
                        <td>
                            <a href="/Matches/Details/@match.Id" class="matchLink text-right fixtureLink-@match.Id">
                                @match.HomeTeam.Name
                                <img src="@match.HomeTeam.LogoLink" class="team-logo-small" alt="Club logo" />
                            </a>
                        </td>
                        <td>
                            <a href="/Matches/Details/@match.Id" class="matchLink fixtureLink-@match.Id">
                                @match.GetTime()
                            </a>
                        </td>
                        <td>
                            <a href="/Matches/Details/@match.Id" class="matchLink text-left fixtureLink-@match.Id">
                                <img src="@match.AwayTeam.LogoLink" class="team-logo-small" alt="Club logo" />
                                @match.AwayTeam.Name
                            </a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
            <div class="tablesLinkContainer">
                <a href="/Matches/Fixtures" class="tablesLink">View All Fixtures</a>
            </div>
        </div>
    </div>
</div>
</div>


<script>
    function changeLinkColor(rowId) {
        let timeCell = $('#linkRow-' + rowId);

        timeCell.css('background', 'darkgreen');

        for (let i = 0; i < $($(".fixtureLink-" + rowId)).length; i++) {
            let currentElement = $($(".fixtureLink-" + rowId)[i]);
            currentElement.css('color', 'white');
        }
    }

    function resetLinkColor(rowId) {
        let timeCell = $('#linkRow-' + rowId);

        timeCell.css('background', 'white');

        for (let i = 0; i < $($(".fixtureLink-" + rowId)).length; i++) {
            let currentElement = $($(".fixtureLink-" + rowId)[i]);
            currentElement.css('color', 'black');
        }
    }
</script>