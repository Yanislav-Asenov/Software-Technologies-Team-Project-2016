@using Microsoft.AspNet.Identity
@model SoftwareTechnologiesTeamProject.ViewModels.PostDetailsViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Post</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Post.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Post.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Post.Body)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Post.Body)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Post.Date)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Post.Date)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Post.Author.FullName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Post.Author.FullName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Post.Author.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Post.Author.Email)
        </dd>
    </dl>
</div>
<p>
    @if (User.IsInRole("Administrators") || (Model.Post.Author != null && User.Identity.Name == Model.Post.Author.UserName))
    {
        @Html.ActionLink("Edit", "Edit", new {id = Model.PostId})
        <br/>
    }
    @Html.ActionLink("Back to List", "Index")
</p>

<div class="add-comment-wrapper">
    @using (Html.BeginForm("AddComment", "Posts", FormMethod.Post))
    {
          
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(m => m.PostId)
        @Html.HiddenFor(m => m.CommentAuthorId)
        @Html.HiddenFor(m => m.Post.Author)

        @Html.TextAreaFor(m => m.NewCommentContent, new { rows = 4, cols = 2, @class="add-comment-text-area" });
        @Html.ValidationMessageFor(model => model.NewCommentContent, "", new { @class = "text-danger" })

        <input type="submit" value="Add comment" class="bottom-right" />
    }
</div>



<div class="comments-wrapper">
    <h1>Comments</h1>

    <div class="comments">
        @foreach (var comment in Model.Post.Comments.ToList())
        {
            <div class="single-comment">
                <div class="single-info">
                    <p>
                        <strong>@comment.Author.FullName</strong> - <i>@comment.PostedOn</i>
                    </p>
                </div>
                @if (User.IsInRole("Administrators") || User.Identity.Name == comment.Author.UserName)
                {
                    <div>
                        @Html.ActionLink("Delete", "DeleteComment", new {id = comment.Id})
                        <a onclick="showEditPostDiv(@comment.Id)" id="editLink">Edit</a>
                    </div>
                }
                <div class="single-comment-content">
                    @comment.Content
                    <div class="edit-comment-div hidden" id=@comment.Id>
                        @using (Html.BeginForm("EditComment", "Posts", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            @Html.HiddenFor(m => comment.Author)
                            @Html.HiddenFor(m => comment.AuthorId)
                            @Html.HiddenFor(m => comment.Id)
                            @Html.HiddenFor(c => comment.PostedOn)
                            @Html.HiddenFor(c => comment.PostId)

                            @Html.TextAreaFor(m => comment.Content, new { rows = 2, cols = 40});
                            @Html.ValidationMessageFor(model => model.NewCommentContent, "", new { @class = "text-danger" })
                            <input type="submit" value="Edit" class="bottom-right"/>
                            <a onclick="cancelEdit(@comment.Id)">Cancel</a>
                        }
                    </div>
                </div>
               
            </div>
            }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function showEditPostDiv(commentId) {
            $("#" + commentId).removeClass("hidden");
            $("#editLink").hide();
        }

        function cancelEdit(id) {
            $("#" + id).addClass("hidden");
            $("#editLink").show();
        }
    </script>
}